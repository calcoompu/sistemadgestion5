-- ================================================
-- SCRIPT PARA AGREGAR CAMPOS WHATSAPP Y BANDERAS
-- Sistema de Gesti√≥n - Actualizaci√≥n de Tablas
-- ================================================

-- 1. AGREGAR CAMPO WHATSAPP A PROVEEDORES
-- ========================================
ALTER TABLE proveedores 
ADD COLUMN whatsapp VARCHAR(20) NULL COMMENT 'N√∫mero WhatsApp internacional (solo n√∫meros)' 
AFTER telefono;

-- Agregar √≠ndice para b√∫squedas r√°pidas
CREATE INDEX idx_proveedores_whatsapp ON proveedores(whatsapp);

-- 2. AGREGAR CAMPO WHATSAPP A CLIENTES  
-- =====================================
ALTER TABLE clientes 
ADD COLUMN whatsapp VARCHAR(20) NULL COMMENT 'N√∫mero WhatsApp internacional (solo n√∫meros)' 
AFTER telefono;

-- Agregar √≠ndice para b√∫squedas r√°pidas
CREATE INDEX idx_clientes_whatsapp ON clientes(whatsapp);

-- 3. ACTUALIZAR TABLA PA√çSES CON BANDERAS Y C√ìDIGOS
-- =================================================

-- Agregar campo para emoji de bandera
ALTER TABLE paises 
ADD COLUMN bandera_emoji VARCHAR(10) NULL COMMENT 'Emoji de la bandera del pa√≠s' 
AFTER nombre;

-- Agregar c√≥digo ISO de 2 letras
ALTER TABLE paises 
ADD COLUMN codigo_iso2 CHAR(2) NULL COMMENT 'C√≥digo ISO de 2 letras (AR, BR, US)' 
AFTER bandera_emoji;

-- Agregar c√≥digo ISO de 3 letras  
ALTER TABLE paises 
ADD COLUMN codigo_iso3 CHAR(3) NULL COMMENT 'C√≥digo ISO de 3 letras (ARG, BRA, USA)' 
AFTER codigo_iso2;

-- Agregar c√≥digo telef√≥nico internacional
ALTER TABLE paises 
ADD COLUMN codigo_telefono VARCHAR(5) NULL COMMENT 'C√≥digo telef√≥nico internacional (+54, +55, +1)' 
AFTER codigo_iso3;

-- Agregar √≠ndices para c√≥digos
CREATE INDEX idx_paises_iso2 ON paises(codigo_iso2);
CREATE INDEX idx_paises_iso3 ON paises(codigo_iso3);
CREATE INDEX idx_paises_telefono ON paises(codigo_telefono);

-- 4. INSERTAR DATOS B√ÅSICOS DE PA√çSES PRINCIPALES
-- ===============================================

-- Actualizar Argentina
UPDATE paises SET 
    bandera_emoji = 'üá¶üá∑',
    codigo_iso2 = 'AR', 
    codigo_iso3 = 'ARG',
    codigo_telefono = '+54'
WHERE nombre = 'Argentina' OR nombre LIKE '%argentina%';

-- Actualizar Brasil  
UPDATE paises SET 
    bandera_emoji = 'üáßüá∑',
    codigo_iso2 = 'BR',
    codigo_iso3 = 'BRA', 
    codigo_telefono = '+55'
WHERE nombre = 'Brasil' OR nombre LIKE '%brasil%';

-- Actualizar Chile
UPDATE paises SET 
    bandera_emoji = 'üá®üá±',
    codigo_iso2 = 'CL',
    codigo_iso3 = 'CHL',
    codigo_telefono = '+56' 
WHERE nombre = 'Chile' OR nombre LIKE '%chile%';

-- Actualizar Uruguay
UPDATE paises SET 
    bandera_emoji = 'üá∫üáæ',
    codigo_iso2 = 'UY',
    codigo_iso3 = 'URY',
    codigo_telefono = '+598'
WHERE nombre = 'Uruguay' OR nombre LIKE '%uruguay%';

-- Actualizar Paraguay
UPDATE paises SET 
    bandera_emoji = 'üáµüáæ',
    codigo_iso2 = 'PY', 
    codigo_iso3 = 'PRY',
    codigo_telefono = '+595'
WHERE nombre = 'Paraguay' OR nombre LIKE '%paraguay%';

-- Actualizar Estados Unidos
UPDATE paises SET 
    bandera_emoji = 'üá∫üá∏',
    codigo_iso2 = 'US',
    codigo_iso3 = 'USA', 
    codigo_telefono = '+1'
WHERE nombre = 'Estados Unidos' OR nombre LIKE '%estados unidos%' OR nombre LIKE '%usa%';

-- 5. CREAR FUNCI√ìN PARA VALIDAR FORMATO WHATSAPP
-- ==============================================

DELIMITER //

CREATE FUNCTION validar_whatsapp(numero VARCHAR(20)) 
RETURNS BOOLEAN
READS SQL DATA
DETERMINISTIC
COMMENT 'Valida formato de n√∫mero WhatsApp internacional'
BEGIN
    -- El n√∫mero debe tener entre 10 y 15 d√≠gitos
    -- Puede empezar con + opcional
    -- Solo n√∫meros despu√©s del +
    
    DECLARE numero_limpio VARCHAR(20);
    
    -- Limpiar el n√∫mero (quitar espacios, guiones, par√©ntesis)
    SET numero_limpio = REPLACE(REPLACE(REPLACE(REPLACE(numero, ' ', ''), '-', ''), '(', ''), ')', '');
    
    -- Quitar el + del inicio si existe
    IF LEFT(numero_limpio, 1) = '+' THEN
        SET numero_limpio = SUBSTRING(numero_limpio, 2);
    END IF;
    
    -- Verificar que solo contenga n√∫meros y tenga longitud correcta
    IF numero_limpio REGEXP '^[0-9]{10,15}$' THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END//

DELIMITER ;

-- 6. CREAR TRIGGERS PARA VALIDACI√ìN AUTOM√ÅTICA
-- ============================================

-- Trigger para proveedores
DELIMITER //

CREATE TRIGGER tr_proveedores_whatsapp_insert
    BEFORE INSERT ON proveedores
    FOR EACH ROW
BEGIN
    IF NEW.whatsapp IS NOT NULL AND NEW.whatsapp != '' THEN
        IF NOT validar_whatsapp(NEW.whatsapp) THEN
            SIGNAL SQLSTATE '45000' 
            SET MESSAGE_TEXT = 'Formato de WhatsApp inv√°lido. Use solo n√∫meros (10-15 d√≠gitos)';
        END IF;
    END IF;
END//

CREATE TRIGGER tr_proveedores_whatsapp_update
    BEFORE UPDATE ON proveedores  
    FOR EACH ROW
BEGIN
    IF NEW.whatsapp IS NOT NULL AND NEW.whatsapp != '' THEN
        IF NOT validar_whatsapp(NEW.whatsapp) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Formato de WhatsApp inv√°lido. Use solo n√∫meros (10-15 d√≠gitos)';
        END IF;
    END IF;
END//

-- Trigger para clientes
CREATE TRIGGER tr_clientes_whatsapp_insert
    BEFORE INSERT ON clientes
    FOR EACH ROW  
BEGIN
    IF NEW.whatsapp IS NOT NULL AND NEW.whatsapp != '' THEN
        IF NOT validar_whatsapp(NEW.whatsapp) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Formato de WhatsApp inv√°lido. Use solo n√∫meros (10-15 d√≠gitos)';
        END IF;
    END IF;
END//

CREATE TRIGGER tr_clientes_whatsapp_update
    BEFORE UPDATE ON clientes
    FOR EACH ROW
BEGIN  
    IF NEW.whatsapp IS NOT NULL AND NEW.whatsapp != '' THEN
        IF NOT validar_whatsapp(NEW.whatsapp) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Formato de WhatsApp inv√°lido. Use solo n√∫meros (10-15 d√≠gitos)';
        END IF;
    END IF;
END//

DELIMITER ;

-- 7. VERIFICACI√ìN FINAL
-- =====================

-- Mostrar estructura actualizada de proveedores
SELECT 'ESTRUCTURA PROVEEDORES:' as info;
DESCRIBE proveedores;

-- Mostrar estructura actualizada de clientes  
SELECT 'ESTRUCTURA CLIENTES:' as info;
DESCRIBE clientes;

-- Mostrar estructura actualizada de pa√≠ses
SELECT 'ESTRUCTURA PA√çSES:' as info; 
DESCRIBE paises;

-- Mostrar pa√≠ses con datos actualizados
SELECT 'PA√çSES CON BANDERAS:' as info;
SELECT id, nombre, bandera_emoji, codigo_iso2, codigo_telefono 
FROM paises 
WHERE codigo_iso2 IS NOT NULL 
ORDER BY nombre;

SELECT '‚úÖ ACTUALIZACI√ìN COMPLETADA - WHATSAPP Y BANDERAS AGREGADOS' as resultado;
